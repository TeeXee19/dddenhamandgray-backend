// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  // provider = "postgresql"
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  password  String
  password_reset_token  String?
  name  String?
  phone   String?
  posts Post[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
}

model State {
  id        Int      @default(autoincrement()) @id
  name     String
  code   String?
  financialInstitutions  Int @default(0)
  beneficiaries    Int  @default(0)
  amountApproved   Int @default(0)
  amountDisbursed   Int @default(0)
  businessesFinanced   Int @default(0)
  greenTransactions   Int @default(0)
  femaleBeneficiaries   Int @default(0)
  bankBranchesTransitioned   Int @default(0)
  carbonEmissionsSaved   Int @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
}


model Post {
  id        Int      @default(autoincrement()) @id
  title     String
  content   String?
  published Boolean? @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
}


model Summary {
  id        Int      @default(autoincrement()) @id
  financialInstitutions     String?
  beneficiaries     String?
  amountApproved   String?
  amountDisbursed   String?
  businessesFinanced   String?
  greenTransactions   String?
  femaleBeneficiaries   String?
  bankBranchesTransitioned   String?
  carbonEmissionsSaved   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt @default(now())
}
